# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-27 14:14
from __future__ import unicode_literals

import cartellaSociale.apps.cartellaSociale.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Avvocati',
            fields=[
                ('id_avv', models.AutoField(db_column='ID_avv', primary_key=True, serialize=False)),
                ('data', models.DateField(blank=True, null=True)),
                ('problema', models.TextField(blank=True, null=True, verbose_name='problematica legale presentata')),
                ('soluzione', models.TextField(blank=True, null=True, verbose_name='soluzione adottata')),
            ],
            options={
                'db_table': 'Avvocati',
                'verbose_name_plural': 'AVVOCATI',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Citta',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('continente', models.CharField(blank=True, max_length=255, null=True)),
                ('stato', models.CharField(blank=True, max_length=255, null=True)),
                ('citta', models.CharField(blank=True, max_length=255, null=True)),
                ('prov', models.CharField(blank=True, max_length=255, null=True)),
                ('cap', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': '04_citta',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cucina',
            fields=[
                ('id_cuc', models.AutoField(primary_key=True, serialize=False)),
                ('oggi', models.DateTimeField()),
                ('pasti', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cucina',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Donazioni',
            fields=[
                ('id_ut', models.AutoField(db_column='ID ut', primary_key=True, serialize=False)),
                ('anno', models.CharField(blank=True, max_length=50, null=True)),
                ('oggi', models.DateTimeField()),
                ('op', models.CharField(max_length=50)),
                ('cogn', models.CharField(blank=True, max_length=50, null=True)),
                ('nom', models.CharField(blank=True, max_length=50, null=True)),
                ('nasc', models.DateField(blank=True, null=True)),
                ('eta', models.CharField(blank=True, max_length=50, null=True)),
                ('paese', models.IntegerField(blank=True, null=True)),
                ('sesso', models.CharField(blank=True, max_length=50, null=True)),
                ('via', models.CharField(blank=True, max_length=50, null=True)),
                ('citta', models.CharField(blank=True, max_length=50, null=True)),
                ('tel', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('tipo', models.CharField(blank=True, max_length=50, null=True)),
                ('ncolli', models.IntegerField(blank=True, null=True)),
                ('peso', models.IntegerField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'donazioni',
                'verbose_name': 'Donazione',
                'verbose_name_plural': 'Donazioni',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ElencoIndirizzi',
            fields=[
                ('idelenco_indirizzi', models.AutoField(db_column='IDElenco indirizzi', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=50, null=True)),
                ('prefisso', models.CharField(blank=True, db_column='Prefisso', max_length=20, null=True)),
            ],
            options={
                'db_table': 'Elenco indirizzi',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ErroriDiIncollamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campo0', models.TextField(blank=True, db_column='Campo0', null=True)),
            ],
            options={
                'db_table': 'Errori di incollamento',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Giurisprud',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cod', models.CharField(blank=True, max_length=5, null=True, unique=True)),
                ('gen', models.CharField(blank=True, max_length=50, null=True)),
                ('sottoge', models.CharField(blank=True, max_length=90, null=True, unique=True)),
            ],
            options={
                'db_table': 'giurisprud',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Interventi',
            fields=[
                ('id_interventi', models.AutoField(db_column='ID_interventi', primary_key=True, serialize=False)),
                ('interventi', models.CharField(blank=True, choices=[('Coloquio utente', 'Coloquio utente'), ('Colloquio servizi', 'Colloquio servizi'), ('Riunione', 'Riunione'), ('Equipe apa', 'Equipe apa'), ('Contatto Telefonico', 'Contatto Telefonico'), ('Relazione', 'Relazione'), ('Aggiornamento', 'Aggiornamento')], max_length=50, null=True)),
                ('tempo', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Interventi',
                'verbose_name': 'Intervento',
                'verbose_name_plural': 'interventi',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Livello01',
            fields=[
                ('id_liv01', models.AutoField(db_column='ID_LIV01', primary_key=True, serialize=False)),
                ('id_ut', models.IntegerField(blank=True, db_column='ID_UT', null=True)),
                ('accesso', models.CharField(blank=True, max_length=50, null=True)),
                ('servizio', models.CharField(blank=True, max_length=50, null=True)),
                ('operatore', models.CharField(blank=True, max_length=50, null=True)),
                ('serviziutilizzati', models.CharField(blank=True, max_length=50, null=True)),
                ('motivoprev', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'Livello_01',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Magazz',
            fields=[
                ('id_mag', models.AutoField(db_column='ID_mag', primary_key=True, serialize=False)),
                ('data', models.DateField(blank=True, null=True)),
                ('settore', models.CharField(blank=True, choices=[('A01', 'A01'), ('A02', 'A02'), ('A03', 'A03'), ('A04', 'A04'), ('A05', 'A05'), ('A06', 'A06'), ('A07', 'A07'), ('A08', 'A08'), ('B01', 'B01'), ('B02', 'B02'), ('B03', 'B03'), ('B04', 'B04'), ('B05', 'B05'), ('B06', 'B06'), ('B07', 'B07'), ('B08', 'B08'), ('C01', 'C01'), ('C02', 'C02'), ('C03', 'C03'), ('C04', 'C04'), ('C05', 'C05'), ('C06', 'C06'), ('C07', 'C07'), ('C08', 'C08'), ('D01', 'D01'), ('D02', 'D02'), ('D03', 'D03'), ('D04', 'D04'), ('D05', 'D05'), ('D06', 'D06'), ('D07', 'D07'), ('D08', 'D08'), ('E01', 'E01'), ('E02', 'E02'), ('E03', 'E03'), ('E04', 'E04'), ('E05', 'E05'), ('E06', 'E06'), ('E07', 'E07'), ('E08', 'E08')], max_length=50, null=True)),
                ('data_fine', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'magazz',
                'verbose_name': 'MAGAZZINO BORSE',
                'verbose_name_plural': 'MAGAZZINO BORSE',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Malattie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cod', models.CharField(blank=True, max_length=4, null=True, unique=True)),
                ('gen', models.CharField(blank=True, max_length=50, null=True)),
                ('sottoge', models.CharField(blank=True, max_length=50, null=True, unique=True)),
            ],
            options={
                'db_table': 'malattie',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Msyscompacterror',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('errorcode', models.IntegerField(blank=True, db_column='ErrorCode', null=True)),
                ('errordescription', models.TextField(blank=True, db_column='ErrorDescription', null=True)),
                ('errorrecid', models.TextField(blank=True, db_column='ErrorRecid', null=True)),
                ('errortable', models.CharField(blank=True, db_column='ErrorTable', max_length=255, null=True)),
            ],
            options={
                'db_table': 'MSysCompactError',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Risorse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tip_risorsa', models.CharField(blank=True, choices=[('Alloggio temporaneo', 'Alloggio temporaneo'), ('Appartamento', 'Appartamento'), ('Formazione professionale', 'Formazione professionale'), ('Corso italiano', 'Corso italiano'), ('Lavoro assistenza anziani', 'Lavoro assitenza anziani'), ('Lavoro pulizie', 'Lavoro pulizie'), ('Lavoro edilizia', 'Lavoro edilizia')], max_length=50, null=True, verbose_name='tipologia di risorsa')),
                ('riferim', models.CharField(blank=True, max_length=50, null=True, verbose_name='riferimento: nominativo')),
                ('riferim_ente', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='riferimento ente/organismo')),
                ('telefono', models.CharField(blank=True, max_length=255, null=True)),
                ('mail', models.CharField(blank=True, max_length=255, null=True)),
                ('note', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Risorse',
                'verbose_name': 'Risorse',
                'verbose_name_plural': 'Risorse',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SwitchboardItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('switchboardid', models.IntegerField(db_column='SwitchboardID')),
                ('itemnumber', models.IntegerField(db_column='ItemNumber')),
                ('itemtext', models.CharField(blank=True, db_column='ItemText', max_length=255, null=True)),
                ('command', models.IntegerField(blank=True, db_column='Command', null=True)),
                ('argument', models.CharField(blank=True, db_column='Argument', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Switchboard Items',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Uds',
            fields=[
                ('id_uds', models.AutoField(db_column='ID_uds', primary_key=True, serialize=False)),
                ('data', models.DateTimeField(blank=True, null=True)),
                ('ora', models.DateTimeField(blank=True, null=True)),
                ('luogo', models.CharField(blank=True, max_length=255, null=True)),
                ('condizioni', models.CharField(blank=True, max_length=255, null=True)),
                ('servizio', models.CharField(blank=True, max_length=255, null=True)),
                ('intervento', models.CharField(blank=True, max_length=255, null=True)),
                ('segnalazione', models.CharField(blank=True, max_length=255, null=True)),
                ('note', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'uds',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ut',
            fields=[
                ('id_serv', models.AutoField(db_column='ID_serv', primary_key=True, serialize=False)),
                ('oggi', models.DateField()),
                ('mensa', models.BooleanField(default=False, verbose_name='rossa')),
                ('no_tex', models.BooleanField(db_column='no tex', default=False)),
                ('docce', models.BooleanField(default=False, verbose_name='blu')),
                ('maga', models.BooleanField(default=False, verbose_name='maggazz')),
                ('pranzo', models.BooleanField(default=False)),
                ('indum', models.BooleanField(default=False, verbose_name='cop/sp')),
                ('tex_scad', models.BooleanField(db_column='tex scad', default=False)),
            ],
            options={
                'db_table': 'ut',
                'verbose_name': 'Servizi di base uttilizatiI',
                'verbose_name_plural': 'Servizi di base uttilizati',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Utenti',
            fields=[
                ('id_ut', models.AutoField(db_column='ID_ut', primary_key=True, serialize=False)),
                ('sicurezza', models.IntegerField(blank=True, null=True)),
                ('del_field', models.BooleanField(db_column='del', default=False, verbose_name='record eliminato')),
                ('ai', models.BooleanField(default=False, verbose_name='a.i.')),
                ('privacy', models.IntegerField(blank=True, null=True)),
                ('anno', models.CharField(blank=True, max_length=255, null=True)),
                ('oggi', models.DateTimeField(blank=True, null=True, verbose_name='data prima accoglienza')),
                ('op', models.CharField(blank=True, max_length=255, null=True)),
                ('foto', models.ImageField(blank=True, null=True, upload_to=cartellaSociale.apps.cartellaSociale.models.image_upload_to)),
                ('cogn', models.CharField(blank=True, max_length=255, null=True, verbose_name='cognome')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='nome')),
                ('cittadinanza', models.CharField(blank=True, choices=[('ITALIANA', 'ITALIANA'), ('EXTRA UE', 'EXTRA UE'), ('UE', 'UE')], max_length=50, null=True)),
                ('genere', models.CharField(blank=True, choices=[('M', 'M'), ('F', 'F')], max_length=50, null=True)),
                ('nasc', models.DateField(blank=True, null=True, verbose_name='nato il')),
                ('luogo', models.CharField(blank=True, max_length=255, null=True, verbose_name='citta')),
                ('paese', models.IntegerField(blank=True, null=True, verbose_name='stato')),
                ('status', models.CharField(blank=True, choices=[('CELIBE', 'CELIBE'), ('CONGIUGATO', 'CONGIUGATO'), ('SEPARATO', 'SEPARATO'), ('DIVORZIATO', 'DIVORZIATO')], max_length=255, null=True)),
                ('cf', models.CharField(blank=True, max_length=16, null=True)),
                ('doc', models.CharField(blank=True, choices=[('PERMESSO DI SOGGIORNO', 'PERMESSO DI SOGGIORNO'), ('CARTA DI IDENTITA', 'CARTA DI IDENTITA'), ('PASSAPORTO', 'PASSAPORTO'), ('PATENTE', 'PATENTE'), ('ALTRO', 'ALTRO'), ('NESSUN DOCUMENTO', 'NESSUN DOCUMENTO')], max_length=255, null=True)),
                ('ndoc', models.CharField(blank=True, max_length=255, null=True)),
                ('scadenza', models.DateTimeField(blank=True, null=True)),
                ('tipologia_pds', models.CharField(blank=True, choices=[('LAVORO AUTONOMO', 'LAVORO AUTONOMO'), ('LAVORO SUBORDINATO', 'LAVORO SUBORDINATO'), ('ATTESA OCCUPAZIONE', 'ATTESA OCCUPAZIONE'), ('SALUTE', 'SALUTE'), ('RICONGIUNGIMENTO', 'RICONGIUNGIMENTO')], db_column='tipologia pds', max_length=50, null=True, verbose_name='pds')),
                ('res', models.BooleanField(default=False, verbose_name='residenza')),
                ('resultima', models.CharField(blank=True, max_length=50, null=True, verbose_name='ultima residenza')),
                ('domicilio', models.CharField(blank=True, max_length=50, null=True)),
                ('homeless', models.BooleanField(default=False)),
                ('homelesstip', models.CharField(blank=True, choices=[('AUTO', 'AUTO'), ('ROULOTTE', 'ROULOTTE'), ('CASA ABBANDONATA', 'CASA ABBANDONATA'), ('STRADA', 'STRADA'), ('STAZIONE', ''), ('AMICI', 'STAZIONE'), ('PARENTI', 'PARENTI'), ('GARAGE', 'GARAGE')], max_length=50, null=True, verbose_name='homeless dove')),
                ('telef', models.CharField(blank=True, max_length=50, null=True, verbose_name='telefono')),
                ('richiesta', models.CharField(blank=True, choices=[('PASTO', 'PASTO'), ('POSTO LETTO', 'POSTO LETTO'), ('LAVARSI', 'LAVARSI'), ('INDUMENTI', 'INDUMENTI'), ('COPERTE', 'COPERTE'), ('AVVOCATO DI STRADA', 'AVVOCATO DI STRADA')], max_length=50, null=True)),
                ('orinetamento', models.CharField(blank=True, choices=[('CENTRO ASCOLTO PER MENSA', 'CENTRO ASCOLTO PER MENSA'), ('CENTRO ASCOLTO PER POSTO LETTO', 'CENTRO ASCOLTO PER POSTO LETTO'), ('CENTRO STRANIERI PER POSTO LETTO', 'CENTRO STRANIERI PER POSTO LETTO'), ('SERVIZIO SOCIALE PER POSTO LETTO', 'SERVIZIO SOCIALE PER POSTO LETTO')], max_length=50, null=True, verbose_name='orientato a')),
                ('tessmensa', models.BooleanField(default=False, verbose_name='tessera mensa')),
                ('scadtessmen', models.DateTimeField(blank=True, null=True, verbose_name='scadenza')),
                ('ssn', models.BooleanField(default=False, verbose_name='servizio san.naz.')),
                ('ssntess', models.CharField(blank=True, max_length=50, null=True, verbose_name='tess.n.')),
                ('ssnscad', models.DateTimeField(blank=True, null=True, verbose_name='scadenza')),
                ('pass_field', models.BooleanField(db_column='pass', default=False, verbose_name='passaporto')),
                ('esenz', models.BooleanField(default=False, verbose_name='essenzioni')),
                ('esenznum', models.CharField(blank=True, max_length=50, null=True, verbose_name='specifiche')),
                ('stp', models.BooleanField(default=False)),
                ('stpnum', models.CharField(blank=True, max_length=50, null=True, verbose_name='numero')),
                ('stpscad', models.DateTimeField(blank=True, null=True, verbose_name='scadenza')),
                ('medicobase', models.BooleanField(default=False, verbose_name='medico di base')),
                ('medicobasenom', models.CharField(blank=True, max_length=50, null=True, verbose_name='nominativo')),
                ('medicobasetel', models.CharField(blank=True, max_length=50, null=True, verbose_name='telefono')),
                ('salutement', models.BooleanField(default=False, verbose_name='salute mentale')),
                ('salutementop', models.CharField(blank=True, max_length=50, null=True, verbose_name='nominativo')),
                ('salutementtel', models.CharField(blank=True, max_length=50, null=True, verbose_name='telefono')),
                ('sert', models.BooleanField(default=False)),
                ('sertop', models.CharField(blank=True, max_length=50, null=True, verbose_name='nominativo')),
                ('serttel', models.CharField(blank=True, max_length=50, null=True, verbose_name='telefono')),
                ('servsoc', models.IntegerField(blank=True, null=True)),
                ('servsocop', models.CharField(blank=True, max_length=50, null=True)),
                ('servsoctel', models.CharField(blank=True, max_length=50, null=True)),
                ('docclinica', models.IntegerField(blank=True, null=True)),
                ('freq', models.CharField(blank=True, max_length=255, null=True)),
                ('nlett', models.CharField(blank=True, max_length=255, null=True)),
                ('data', models.DateTimeField(blank=True, null=True)),
                ('posta', models.CharField(blank=True, max_length=255, null=True)),
                ('ind', models.CharField(blank=True, choices=[('DARE APPUNTAMENTO', 'DARE APPUNTAMENTO'), ('INVIO CENTRO ASCOLTO', 'INVIO CENTRO ASCOLTO'), ('IN CARICO', 'IN CARICO'), ('IN ATTESA', 'IN ATTESA'), ('ATTENZIONE', 'ATTENZIONE'), ('INDESIDERATA', 'INDESIDERATA'), ('DIFFIDATA', 'DIFFIDATA'), ('SOSPESA', 'SOSPESA'), ('RIAMMESSA', 'RIAMMESSA'), ('NON SPECIFICATO', 'NON SPECIFICATO')], max_length=50, null=True, verbose_name='persona')),
                ('note', models.TextField(blank=True, null=True)),
                ('emerg', models.IntegerField(blank=True, null=True)),
                ('liv01_accesso', models.CharField(blank=True, choices=[('DIRETTO', 'DIRETTO'), ('SU INVIO', 'SU INVIO'), ('INVIO A', 'INVIO A')], db_column='Liv01_accesso', max_length=50, null=True, verbose_name='accesso')),
                ('liv01_servizio', models.CharField(blank=True, choices=[('CENTRO ASCOLTO', 'CENTRO ASCOLTO'), ('CENTRO STRANIERI', 'CENTRO STRANIERI'), ('SERVIZIO SOCIALE', 'SERVIZIO SOCIALE'), ('SERT', 'SERT'), ('PREFETTURA', 'PREFETTURA')], db_column='Liv01_servizio', max_length=50, null=True, verbose_name='servizio')),
                ('liv01_operatore', models.CharField(blank=True, db_column='Liv01_operatore', max_length=90, null=True, verbose_name='operatore: nome, tel, mail')),
                ('liv01_servutilizzati', models.TextField(blank=True, db_column='Liv01_servutilizzati', null=True, verbose_name='servizi utilizzati: breve descrizione')),
                ('liv01_motivo', models.CharField(blank=True, choices=[('TUTELA SANITARIA', 'TUTELA SANITARIA'), ('RICERCA LAVORO', 'RICERCA LAVORO'), ('RICERCA ALLOGGIO', 'RICERCA ALLOGGIO'), ('STUDIO FORMAZIONE', 'STUDIO FORMAZIONE'), ('DOMICILIO TEMPORANEO', 'DOMICILIO TEMPORANEO'), ('ASILO POL RIFUGIATO', 'ASILO POL RIFUGIATO'), ('MISURE GIUDIZIARIE', 'MISURE GIUDIZIARIE'), ('ATTESA RIMPATRIO', 'ATTESA RIMPATRIO'), ('EMERGENZA', 'EMERGENZA'), ('EMERGENZA FREDDO', 'EMERGENZA FREDDO')], db_column='Liv01_motivo', max_length=50, null=True, verbose_name='presa in carico per')),
                ('liv01_status', models.BooleanField(db_column='Liv01_status', default=False, verbose_name='coniugato')),
                ('liv01_coniuge', models.CharField(blank=True, db_column='Liv01_coniuge', max_length=50, null=True, verbose_name='coniuge')),
                ('liv01_figli', models.CharField(blank=True, db_column='Liv01_figli', max_length=50, null=True, verbose_name='figli')),
                ('liv01_altririf', models.CharField(blank=True, db_column='Liv01_altririf', max_length=50, null=True, verbose_name='altro')),
                ('liv01_famiglia', models.TextField(blank=True, db_column='Liv01_famiglia', null=True, verbose_name='breve descrizione, se fornisce sostegno, condizione ...')),
                ('liv01_abitaz', models.CharField(blank=True, choices=[('Propietà', 'Propietà'), ('Usufrutto', 'Usufrutto'), ('Affitto', 'Affitto'), ('Subaffitto', 'Subaffitto'), ('Casa popolare', 'Casa popolare'), ('Coabitazione', 'Coabitazione')], db_column='Liv01_abitaz', max_length=50, null=True, verbose_name='abitazione')),
                ('liv01_senzadim', models.BooleanField(db_column='Liv01_senzadim', default=False, verbose_name='senza dimora')),
                ('liv01_notte', models.CharField(blank=True, db_column='Liv01_notte', max_length=50, null=True, verbose_name='dove passa la notte a modena')),
                ('liv01_condprof', models.CharField(blank=True, db_column='Liv01_condprof', max_length=50, null=True, verbose_name='cond.profess.')),
                ('liv01_reddito', models.BooleanField(db_column='Liv01_reddito', default=False, verbose_name='reddito')),
                ('liv01_reddliv', models.CharField(blank=True, db_column='Liv01_reddliv', max_length=50, null=True, verbose_name='livello di redito')),
                ('liv01_ultimolavoro', models.CharField(blank=True, db_column='Liv01_ultimolavoro', max_length=50, null=True, verbose_name='ultimo lavoro')),
                ('liv01_tipologia', models.CharField(blank=True, choices=[('TD tempo pieno', 'TD tempo pieno'), ('TD part time', 'TD part time'), ('TI tempo pieno', 'TI tempo pieno'), ('TI part time', 'TI part time'), ('Cocopro', 'Cocopro'), ('Voucher', 'Voucher'), ('Tirocinio', 'Tirocinio'), ('Stage', 'Stage')], db_column='Liv01_tipologia', max_length=50, null=True, verbose_name='contratto')),
                ('liv01_azienda', models.CharField(blank=True, db_column='Liv01_azienda', max_length=50, null=True, verbose_name='azienda: rif. e tel')),
                ('liv01_formprof', models.BooleanField(db_column='Liv01_formprof', default=False, verbose_name='formaz prof')),
                ('liv01_formprofdescr', models.CharField(blank=True, db_column='Liv01_formprofdescr', max_length=50, null=True)),
                ('livo01_italiano', models.CharField(blank=True, choices=[('Scarsa', 'Scarsa'), ('Media', 'Media'), ('Buona', 'Buona')], db_column='Livo01_italiano', max_length=50, null=True, verbose_name='italiano')),
                ('liv01_tititaliano', models.CharField(blank=True, db_column='Liv01_tititaliano', max_length=50, null=True, verbose_name='titolo di studio italiano')),
                ('liv01_titstran', models.CharField(blank=True, db_column='Liv01_titstran', max_length=50, null=True, verbose_name='titolo di studio straniero')),
                ('liv01_pat', models.IntegerField(blank=True, db_column='Liv01_pat', null=True, verbose_name='patente')),
                ('liv01_ci', models.IntegerField(blank=True, db_column='Liv01_ci', null=True, verbose_name='scritto centro impiego')),
                ('liv01_suss', models.CharField(blank=True, db_column='Liv01_suss', max_length=50, null=True, verbose_name='sussidi/disoccupazione')),
                ('liv01_pens', models.CharField(blank=True, db_column='Liv01_pens', max_length=50, null=True, verbose_name='pensione')),
                ('liv03_req', models.BooleanField(db_column='Liv03_req', default=False, verbose_name='requisiti accesso sportello avvocato')),
                ('liv03_tipologia', models.CharField(blank=True, db_column='Liv03_tipologia', max_length=255, null=True)),
                ('liv03_avvoc', models.CharField(blank=True, db_column='Liv03_avvoc', max_length=255, null=True, verbose_name='avvocato di riferimento, telefono, mail')),
                ('liv03_note', models.TextField(blank=True, db_column='Liv03_note', null=True, verbose_name='Problematica Risoluzione')),
                ('liv04_dormit', models.BooleanField(db_column='Liv04_dormit', default=False, verbose_name='dormitorio')),
                ('liv04_servizio', models.CharField(blank=True, choices=[('COMUNE DI MODENA CONVENZIONE SERVIZIO SOCIALE', 'COMUNE DI MODENA CONVENZIONE SERVIZIO SOCIALE'), ('COMUNE DI MODENA CONVENZIONE CENTRO STRANIERI', 'COMUNE DI MODENA CONVENZIONE CENTRO STRANIERI'), ('COMUNE DI MODENA EMERGENZA FREDDO', 'COMUNE DI MODENA EMERGENZA FREDDO'), ('CENTRO ASCOLTO DIOCESANO', 'CENTRO ASCOLTO DIOCESANO'), ('PREFETTURA', 'PREFETTURA'), ('AUSL SERT', 'AUSL SERT'), ('PORTA APERTA', 'PORTA APERTA'), ('ALTRO', 'ALTRO')], db_column='Liv04_servizio', max_length=255, null=True, verbose_name='servizio di accoglienza')),
                ('liv04_tipologia', models.CharField(blank=True, choices=[('PROGETTO', 'PROGETTO'), ('EMERGENZA', 'EMERGENZA')], db_column='Liv04_tipologia', max_length=255, null=True, verbose_name='tipologia')),
                ('liv04_allprov', models.CharField(blank=True, choices=[('SENZA TETTO', 'SENZA TETTO'), ('SFRATTO', 'SFRATTO'), ('AUTO', 'AUTO'), ('CONVIVENZA', 'CONVIVENZA')], db_column='Liv04_allprov', max_length=255, null=True, verbose_name='condizione alloggiativa di provenienza')),
                ('liv04_statusacc', models.CharField(blank=True, choices=[('PRESENTE', 'PRESENTE'), ('DIMESSO', 'DIMESSO')], db_column='Li04_statusacc', max_length=50, null=True, verbose_name='status accogl.')),
                ('liv04_amm', models.DateTimeField(blank=True, db_column='Liv04_amm', null=True, verbose_name='ammissione')),
                ('liv04_dimmprev', models.DateTimeField(blank=True, db_column='Liv04_dimmprev', null=True, verbose_name='dimissione')),
                ('liv04_dimm', models.DateTimeField(blank=True, db_column='Liv04_dimm', null=True)),
                ('liv04_acccoll', models.CharField(blank=True, choices=[('PARROCCHIA S.AGOSTINO', 'PARROCCHIA S.AGOSTINO'), ('PARROCCHIA BVA', 'PARROCCHIA BVA'), ('PARROCCHIA REGINA PACIS', 'PARROCCHIA REGINA PACIS'), ('PARROCCHIA GESÙ REDENTORE', 'PARROCCHIA GESÙ REDENTORE'), ('PARROCCHIA BAGGIOVARA', 'PARROCCHIA BAGGIOVARA'), ('PARROCCHIA S.ANTONIO', 'PARROCCHIA S.ANTONIO'), ('PARROCCHIA S.FAUSTINO', 'PARROCCHIA S.FAUSTINO'), ('APPARTAMENTO VIA GRAMSCI', 'APPARTAMENTO VIA GRAMSCI'), ('APPARTAMENTO VIA FREGNI', 'APPARTAMENTO VIA FREGNI')], db_column='Liv04_acccoll', max_length=255, null=True, verbose_name='Accoglienza collegata a')),
                ('liv04_acccoll_dal', models.DateTimeField(blank=True, db_column='Liv04_acccoll_dal', null=True, verbose_name='accoglienza collegata al')),
                ('liv04_acccoll_al', models.DateTimeField(blank=True, db_column='Liv04_acccoll_al', null=True, verbose_name='accoglienza collegata al')),
                ('liv04_profilo', models.TextField(blank=True, db_column='Liv04_profilo', null=True, verbose_name='profillo: breve nota su aspetti positivi/negativi riscontrati durante la permanenza')),
                ('liv04_motdimm', models.CharField(blank=True, choices=[('CONCLUSIONE PROGETTO', 'CONCLUSIONE PROGETTO'), ('ALLONTANAMENTO ARBITRARIO', 'ALLONTANAMENTO ARBITRARIO'), ('INSERIMENTO ALTRA STRUTTURA', 'INSERIMENTO ALTRA STRUTTURA'), ('DIMISSIONE PER INFRAZIONE REGOLE', 'DIMISSIONE PER INFRAZIONE REGOLE')], db_column='Liv04_motdimm', max_length=255, null=True, verbose_name='Motivo dimissione')),
                ('liv04_conddimm', models.CharField(blank=True, choices=[('APPARTAMENTO', 'APPARTAMENTO'), ('AFFITTACAMERE', 'AFFITTACAMERE'), ('ALTRA STRUTTURA', 'ALTRA STRUTTURA'), ('SENZA CASA', 'SENZA CASA')], db_column='Liv04_conddimm', max_length=255, null=True, verbose_name='Alloggio dopo dimissione')),
                ('liv05_titolare', models.CharField(blank=True, db_column='Liv05_titolare', max_length=255, null=True, verbose_name='titolare del case: nominativo, tel, mail')),
                ('liv05_refapa', models.CharField(blank=True, db_column='Liv05_refapa', max_length=255, null=True, verbose_name='referente interno apa')),
                ('liv05_obiett', models.CharField(blank=True, db_column='Liv05_obiett', max_length=255, null=True, verbose_name='obiettivo: descr')),
                ('liv05_duratadal', models.DateField(blank=True, db_column='Liv05_duratadal', null=True, verbose_name='dal')),
                ('liv05_durataal', models.DateField(blank=True, db_column='Liv05_durataal', null=True, verbose_name='al')),
                ('liv05_descrcrit', models.TextField(blank=True, db_column='Liv05_descrcrit', null=True, verbose_name="CRITICITA'")),
                ('liv05_descrris', models.TextField(blank=True, db_column='Liv05_descrris', null=True, verbose_name='RISORSE')),
                ('liv05_servapa', models.TextField(blank=True, db_column='Liv05_servapa', null=True, verbose_name='SERVIZI RICHIESTI A PORTA APERTA')),
                ('liv05_servaltri', models.TextField(blank=True, db_column='Liv05_servaltri', null=True, verbose_name='RETE DEI SERVIZI COINVOLTI')),
                ('liv05_imppers', models.TextField(blank=True, db_column='Liv05_imppers', null=True, verbose_name='IMPEGNI DELLA PERSONA')),
                ('liv05_aggiorn', models.TextField(blank=True, db_column='Liv05_aggiorn', null=True, verbose_name='AGGIORNAMENTO E DIARIO: DATA, RILEVAZIONE, TIPO DI INTERVENTO, SOGETTI COINVOLTI')),
                ('liv05_oretit_refapa', models.IntegerField(blank=True, db_column='Liv05_oretit/refapa', null=True, verbose_name='Ore settimanali (titolare/referente apa')),
                ('liv05_collagg', models.IntegerField(blank=True, db_column='Liv05_collagg', null=True, verbose_name='N. colloqui aggiornamento con utente')),
                ('liv05_incontriinv', models.IntegerField(blank=True, db_column='Liv05_incontriinv', null=True, verbose_name='N. incontri con operatori invianti')),
                ('liv05_volcoinv', models.IntegerField(blank=True, db_column='Liv05_volcoinv', null=True, verbose_name='N.volontarii coinvolti')),
                ('liv05_contrapa', models.DecimalField(blank=True, db_column='Liv05_contrapa', decimal_places=4, max_digits=19, null=True, verbose_name='Tot. contributo economico apa')),
                ('liv05_conclprog', models.DateField(blank=True, db_column='Liv05_conclprog', null=True, verbose_name='conclusione del progetto personale')),
                ('liv05_famiglia', models.CharField(blank=True, choices=[('Vive solo', 'Vive solo'), ('Vive nella propia famiglia', 'Vive nella propia famiglia'), ('Convive nuova famiglia', 'Convive nuova famiglia'), ('Convive con amici', 'Convive con amici')], db_column='Liv05_famiglia', max_length=255, null=True, verbose_name='famiglia')),
                ('liv05_lavoro', models.CharField(blank=True, choices=[('Disoccupato', 'Disoccupato'), ('occupato', 'Occupato'), ('Pensionato', 'Pensionato')], db_column='Liv05_lavoro', max_length=255, null=True, verbose_name='lavoro')),
                ('liv05_salute', models.CharField(blank=True, choices=[('Guarito', 'Guarito'), ('Malato', 'Malato')], db_column='Liv05_salute', max_length=255, null=True, verbose_name='salute')),
                ('liv05_diritti', models.CharField(blank=True, choices=[('Residente', 'Residente'), ('Senza dimora', 'Senza dimora'), ('Regolare', 'Regolare'), ('Irregolare', 'Irregolare')], db_column='Liv05_diritti', max_length=255, null=True, verbose_name='diritti')),
                ('liv05_alloggio', models.CharField(blank=True, db_column='Liv05_alloggio', max_length=255, null=True)),
            ],
            options={
                'db_table': 'utenti',
                'verbose_name': 'Persona',
                'verbose_name_plural': 'Persone',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Visite',
            fields=[
                ('id_visita', models.AutoField(db_column='ID_visita', primary_key=True, serialize=False)),
                ('data', models.DateTimeField(blank=True, null=True)),
                ('terapia', models.TextField(blank=True, null=True)),
                ('id_ut', models.ForeignKey(blank=True, db_column='ID_ut', null=True, on_delete=django.db.models.deletion.CASCADE, to='cartellaSociale.Utenti')),
                ('patologie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cartellaSociale.Malattie')),
            ],
            options={
                'db_table': 'visite',
                'verbose_name_plural': 'AMBULATORIO - VISITE',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='ut',
            name='id_ut',
            field=models.ForeignKey(blank=True, db_column='ID_ut', null=True, on_delete=django.db.models.deletion.CASCADE, to='cartellaSociale.Utenti'),
        ),
        migrations.AddField(
            model_name='uds',
            name='id_ut',
            field=models.ForeignKey(blank=True, db_column='ID_ut', null=True, on_delete=django.db.models.deletion.CASCADE, to='cartellaSociale.Utenti'),
        ),
        migrations.AlterUniqueTogether(
            name='switchboarditems',
            unique_together=set([('switchboardid', 'itemnumber')]),
        ),
        migrations.AddField(
            model_name='magazz',
            name='id_ut',
            field=models.ForeignKey(blank=True, db_column='ID_ut', null=True, on_delete=django.db.models.deletion.CASCADE, to='cartellaSociale.Utenti'),
        ),
        migrations.AddField(
            model_name='interventi',
            name='id_ut',
            field=models.ForeignKey(db_column='ID_ut', on_delete=django.db.models.deletion.CASCADE, to='cartellaSociale.Utenti'),
        ),
        migrations.AddField(
            model_name='avvocati',
            name='id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cartellaSociale.Giurisprud'),
        ),
        migrations.AddField(
            model_name='avvocati',
            name='id_ut',
            field=models.ForeignKey(blank=True, db_column='ID_UT', null=True, on_delete=django.db.models.deletion.CASCADE, to='cartellaSociale.Utenti'),
        ),
        migrations.CreateModel(
            name='Accoglienza Residenziale',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Accoglienze Residenziale',
                'proxy': True,
            },
            bases=('cartellaSociale.utenti',),
        ),
        migrations.CreateModel(
            name='Cartella Sociale',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Cartelle Sociale',
                'proxy': True,
            },
            bases=('cartellaSociale.utenti',),
        ),
        migrations.CreateModel(
            name='Cartella Sociale Avvocati',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Cartelle Sociale Avvocati',
                'proxy': True,
            },
            bases=('cartellaSociale.utenti',),
        ),
        migrations.CreateModel(
            name='Cartella Sociale Portineria',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Cartelle Sociale Portineria',
                'proxy': True,
            },
            bases=('cartellaSociale.utenti',),
        ),
        migrations.CreateModel(
            name='Elenco Attenzionati',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Elenchi Attenzionati',
                'proxy': True,
            },
            bases=('cartellaSociale.utenti',),
        ),
        migrations.CreateModel(
            name='Magazzi',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Magazzi',
                'proxy': True,
            },
            bases=('cartellaSociale.magazz',),
        ),
        migrations.CreateModel(
            name='Progetto personale',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Progetti personale',
                'proxy': True,
            },
            bases=('cartellaSociale.utenti',),
        ),
        migrations.CreateModel(
            name='Progetto personale Interventi',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Progetti personale Interventi',
                'proxy': True,
            },
            bases=('cartellaSociale.utenti',),
        ),
        migrations.CreateModel(
            name='progetto personale, risorse e risultati',
            fields=[
            ],
            options={
                'verbose_name_plural': 'progetti personale, risorse e risultati',
                'proxy': True,
            },
            bases=('cartellaSociale.utenti',),
        ),
        migrations.CreateModel(
            name='Servizi Lavoro Abitazione',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Servizi Lavoro Abitazione',
                'proxy': True,
            },
            bases=('cartellaSociale.utenti',),
        ),
        migrations.CreateModel(
            name='Tutela dei diritti',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Tutela dei diritti',
                'proxy': True,
            },
            bases=('cartellaSociale.utenti',),
        ),
    ]
